<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f/8PuSELBKqAyDIAAAAASUVORK5CYII=
</value>
  </data>
</root>